and the processor is just generating cache misses
^.

and cache misses turn into i need this cache line and 
those are requests to the memory controller
^722 x 143 @ (610, 1024).

the memory controller takes all these requests for cache lines and translates those into 
^1011 x 309 @ (124, 704).

memory channel requests which is like i need this bank
this byte
this row
^465 x 143 @ (603, 555).

so the memory controller is mapping physical linear addresses to spots in a dram array
now the memory controller is getting 
^1011 x 309 @ (124, 704).

just kind of 
random cache misses
whatever the algorithm does
^722 x 143 @ (610, 1024).

and what any modern memory controller does is 
^1011 x 309 @ (124, 704).

it just starts enqueuing those and buffers them up
^425 x 86 @ (159, 781).
^426 x 86 @ (160, 896).
^425 x 86 @ (656, 783).
^426 x 86 @ (657, 896).

and then reorders all of those cache misses such that if it can find requests that it needs to make to the same bank or sorry to the same row
it will reorder the requests in order to maximize this sort of hit rate
^.

so it's gonna basically reorder all the processor's memory requests
^722 x 143 @ (610, 1024).

in order to try and get the highest bank pipelining and the highest row buffer locality
^.